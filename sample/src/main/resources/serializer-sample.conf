akka {
  loglevel = "INFO"
  log-dead-letters = on

  persistence {
    journal.plugin = "akka-persistence-sql-async.journal"
    snapshot-store.plugin = "akka-persistence-sql-async.snapshot-store"
  }

  actor {
    serializers {
      sample-persistent-repr = "sample.serializer.SamplePersistentReprSerializer"
      sample-snapshot = "sample.serializer.SampleSnapshotSerializer"
    }

    serialization-bindings {
      "akka.persistence.PersistentRepr" = sample-persistent-repr
      "akka.persistence.serialization.Snapshot" = sample-snapshot
    }
  }

  log-dead-letters-during-shutdown = on
}

akka-persistence-sql-async {
  journal.class = "akka.persistence.journal.sqlasync.MySQLAsyncWriteJournal"
  snapshot-store.class = "akka.persistence.snapshot.sqlasync.MySQLSnapshotStore"

  user = "root"
  password = ""
  url = "jdbc:mysql://localhost/akka_persistence_sql_async_serializer_sample"
  max-pool-size = 4
  wait-queue-capacity = 10000

  metadata-table-name = "akka_persistence_metadata"
  journal-table-name = "persistence_journal"
  snapshot-table-name = "persistence_snapshot"
}
